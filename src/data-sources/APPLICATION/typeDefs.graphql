enum ApplicationType {
	ADD_THESIS_CO_SUPERVISOR
	CONFIRMATION
	CONFRENCE
	INTERNSHIP
	PROMOTION
	THESIS_TITLE_CHANGE
}

type Review {
	reviewer: User!
	decision: Boolean!
	comment: String!
}

interface Application {
	_id: ID!
	applicant: User!
	session: Session!
	reviews: [Review]
	refuses: Int!
	accepts: Int!
	submittedAt: Date!
	treated: Boolean!
	finalDecision: Boolean!
}

input applicationsBySessionAndTypeInput {
	applicationType: ApplicationType, 
	SessionID: ID!
}

extend type Query {
	applications: [Application]
	application(_id: ID!): Application
	applicationsByApplicant(_id: ID!): [Application]
	applicationsBySessionAndType(input: applicationsBySessionAndTypeInput): [Application]
}

input reviewApplicationInput {
	decision: Boolean!
	comment: String!
	applicationID: ID!
}

input giveApplicationFinalDecisionInput {
	applicationID: ID!
	finalDecision: Boolean!
}

type Mutation {
	reviewApplication(input: reviewApplicationInput!): Application!
	giveApplicationFinalDecision(input: giveApplicationFinalDecisionInput!): Application!
}